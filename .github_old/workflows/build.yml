name: Build Rustberry Jukebox

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch:
          # - armv7-unknown-linux-musleabihf
          # - armv7-unknown-linux-gnueabihf
          - arm-unknown-linux-gnueabihf

    steps:
      - uses: actions/checkout@v2
      - name: Cache Preparation
        run: |
          mkdir -p /home/runner/work/_temp/_github_home/caches/registry
          mkdir -p /home/runner/work/_temp/_github_home/caches/git
      - name: Cache Cargo registry
        uses: actions/cache@v1
        with:
          path: /home/runner/work/_temp/_github_home/caches/registry
          key: ${{ runner.os }}-${{ matrix.arch }}-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-registry-
      - name: Cache Cargo git
        uses: actions/cache@v1
        with:
          path: /home/runner/work/_temp/_github_home/caches/git
          key: ${{ runner.os }}-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-git-
      - name: Cache Cargo target
        uses: actions/cache@v1
        with:
          path: /home/runner/work/rustberry-jukebox/rustberry-jukebox/target
          key: ${{ runner.os }}-${{ matrix.arch }}-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-target-
      - name: "Cargo Build (target: arm-unknown-linux-gnueabihf)"
        id: build-arm-unknown-linux-gnueabihf
        if: matrix.arch == 'arm-unknown-linux-gnueabihf'
        uses: ./.github/actions/build/arm-unknown-linux-gnueabihf
      # - name: "Cargo Build (target: armv7-unknown-linux-gnueabihf)"
      #   id: build-armv7-unknown-linux-gnueabihf
      #   if: matrix.arch == 'armv7-unknown-linux-gnueabihf'
      #   uses: ./.github/actions/build/armv7-unknown-linux-gnueabihf
      - name: Package
        id: package
        run: |
          cd _artifacts
          tar czvf '../rustberry-jukebox-${{ steps.build-arm-unknown-linux-gnueabihf.outputs.version }}-${{ matrix.arch }}.tar.gz' \
            jukeboxd
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.build-arm-unknown-linux-gnueabihf.outputs.version }}
          release_name: Release ${{ steps.build-arm-unknown-linux-gnueabihf.outputs.version }}
          draft: true
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./rustberry-jukebox-${{ steps.build-arm-unknown-linux-gnueabihf.outputs.version }}-${{ matrix.arch }}.tar.gz
          asset_name: rustberry-jukebox-${{ steps.build-arm-unknown-linux-gnueabihf.outputs.version }}-${{ matrix.arch }}.tar.gz
          asset_content_type: application/gzip
      - name: Cache Upload Preparation
        run: |
          sudo chown -R runner:docker /home/runner/work/_temp/_github_home/caches/registry
          sudo chown -R runner:docker /home/runner/work/_temp/_github_home/caches/git
          sudo chown -R runner:docker /home/runner/work/rustberry-jukebox/rustberry-jukebox/target
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: rustberry-jukeboxd
          path: _artifacts/jukeboxd
